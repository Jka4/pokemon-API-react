{"version":3,"sources":["components/DetailedPage/Stats.tsx","components/DetailedPage/Abilities.tsx","components/DetailedPage/EvolutionForms.tsx","components/DetailedPage/DetailedPage.tsx","utils/API.ts"],"names":["Stats","stats","weight","className","Paper","elevation","map","el","stat","name","base_stat","Abilities","abilities","element","ability","ImageContainer","lazy","EvolutionForms","pokemonsArr","evolutionChain","currentPokemon","chainNames","chain","useState","setChain","useEffect","arr","forEach","index","image","find","o","species_name","id","placeholderBase64","push","FormTitle","length","to","data-pokemon_id","onClick","Number","setDelailedPageData","url","cn","fallback","src","alt","ConnectedDetailedPage","connect","store","detailsPage","setEvolutionChain","sprites","pokemonObj","POKEMONS","fallbackSprites","type","height","width","color","randomNum","Math","round","random","Object","keys","spriteName","n","imageHQ","props","getRandomPokemon","a","amount","randomNumber","floor","URL","dispatch","axios","get","then","response","randomPokemons","data","catch","error","console","log","pokemon_id","page","other","versions"],"mappings":"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","file":"static/js/13.3cda1947.chunk.js","sourcesContent":["import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\n\ninterface Props {\n  stats: StatsElements[];\n  weight: number;\n}\n\ninterface StatsElements {\n  base_stat: number;\n  stat: {\n    name: string;\n  };\n}\n\nconst Stats: React.FC<Props> = ({ stats, weight }: Props) => {\n  return (\n    <div className=\"stats\">\n      <Paper elevation={3} className=\"statsUL\">\n        <div className=\"skills_title\">Stats</div>\n        {stats &&\n          stats.map((el: StatsElements) => (\n            <li className=\"statsLI\" key={el.stat.name}>\n              {el.stat.name} {el.base_stat}\n            </li>\n          ))}\n        <li className=\"statsLI\">weight {weight}kg</li>\n      </Paper>\n    </div>\n  );\n};\n\nexport default Stats;\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\n\ntype Props = {\n  abilities: AbilityElements[];\n};\n\ninterface AbilityElements {\n  ability: {\n    url: string;\n    name: string;\n  };\n}\n\nconst Abilities: React.FC<Props> = ({ abilities = [] }: Props) => {\n  return (\n    <div className=\"abilities\">\n      <Paper elevation={3} className=\"abilitiesUL\">\n        <div className=\"skills_title\">Abilities</div>\n        {abilities.map((element: AbilityElements) => (\n          <li className=\"abilitiesLI\" key={element.ability.name}>\n            {element.ability.name}\n          </li>\n        ))}\n      </Paper>\n    </div>\n  );\n};\n\nexport default Abilities;\n","import React, { lazy, useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport find from \"lodash.find\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport { setDelailedPageData } from \"utils/API\";\n\nconst ImageContainer = lazy(() => import(\"components/ImageContainer/ImageContainer\"));\n\ntype Props = {\n  pokemonsArr: any;\n  evolutionChain: any;\n  currentPokemon: any;\n\n};\n\ninterface ChainElements {\n  image: string;\n  species_name: string;\n  placeholderBase64: string;\n  id: number | string;\n  [key: string]: any;\n}\n\nconst EvolutionForms: React.FC<Props> = ({ pokemonsArr, evolutionChain, currentPokemon }: Props) => {\n  const chainNames: ChainElements[] = evolutionChain?.chain;\n  const [chain, setChain] = useState<any[]>([]);\n\n  useEffect(() => {\n    let arr: any[] = [];\n    chainNames &&\n      chainNames.forEach((index: ChainElements) => {\n        index.image = find(\n          pokemonsArr,\n          (o) => o.name === index.species_name\n        ).image;\n        index.id = find(pokemonsArr, (o) => o.name === index.species_name).id;\n        index.placeholderBase64 = find(\n          pokemonsArr,\n          (o) => o.name === index.species_name\n        ).placeholderBase64;\n        arr.push(index);\n      });\n    setChain(arr);\n  }, [chainNames, pokemonsArr]);\n\n  const FormTitle = () => {\n    return (\n      <div className=\"formsTitle\">\n        {chain.length >= 2 ? <span>All forms:</span> : <span>Form:</span>}\n      </div>\n    );\n  };\n\n  const handleClick = (id: number) => {\n    setDelailedPageData(id);\n  }\n\n  const fallback = (placeholderBase64: string) => {\n    return (\n      <>\n        <img\n          src={placeholderBase64}\n          className=\"evoFormImg placeholderBase64\"\n          alt=\"placeholderBase64\"\n        />\n      </>\n    );\n  };\n\n  return (\n    <>\n      <FormTitle />\n\n      <div className=\"evolutionForms\">\n        {chain.map((index: ChainElements) => (\n          <NavLink\n            to={`/detailedPage/pokemon/${index.id}`}\n            data-pokemon_id={index.id}\n            onClick={() => handleClick(Number(index.id))}\n            key={index.id}\n          >\n            <Paper\n              elevation={3}\n              className={\n                currentPokemon === index.species_name\n                  ? \"evoForm currentPokemon\"\n                  : \"evoForm\"\n              }\n            >\n              <ImageContainer url={index.image} cn={\"evoFormImg\"} fallback={fallback(index.placeholderBase64)} />\n\n              <div className=\"pokemonName\">{index.species_name}</div>\n            </Paper>\n          </NavLink>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default EvolutionForms;\n","/* eslint-disable import/no-anonymous-default-export */\nimport React, { lazy, useEffect, useState } from \"react\";\nimport { Provider, connect } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\n\nimport Stats from \"./Stats\";\nimport Abilities from \"./Abilities\";\nimport EvolutionForms from \"./EvolutionForms\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport store from \"Store/store\";\nimport find from \"lodash.find\";\n\nimport POKEMONS from \"utils/pokemonDataArray\";\n\nimport \"./styles/style.scss\";\n\nconst ImageContainer = lazy(() => import(\"components/ImageContainer/ImageContainer\"));\n\ntype Props = {\n  pokemonArr: DetailsPageTypes[] | null;\n  detailsPage: null | any;\n};\n\ntype evolutionChainTypes = {\n  placeholderBase64: string;\n  imageHQ: string;\n};\n\ntype DetailsPageTypes = {\n  weight: number;\n  abilities: {\n    ability: {\n      url: string;\n      name: string;\n    };\n  }[];\n  stats: {\n    base_stat: number;\n    stat: {\n      name: string;\n    };\n  }[];\n  sprites: any[string];\n  name: string;\n};\n\n\nconst DetailedPage: React.FC<Props> = ({ detailsPage }: Props) => {\n  const [evolutionChain, setEvolutionChain] = useState<evolutionChainTypes>();\n  const { abilities, stats, weight, sprites, name }: DetailsPageTypes = detailsPage || {};\n\n  useEffect(() => {\n    if (detailsPage) {\n      let pokemonObj = find(POKEMONS, (o) => o.name === detailsPage.name);\n      pokemonObj && setEvolutionChain(pokemonObj);\n    }\n  }, [detailsPage]);\n\n\n  const fallbackSprites = () => {\n    return (<> <Loader type=\"TailSpin\" height={50} width={50} color={\"red\"} /> </>\n    );\n  };\n\n  const fallbackEvo = (placeholderBase64: string) => {\n    return (\n      <>\n        <img\n          src={placeholderBase64}\n          className=\"placeholderBase64 bigImage\"\n          alt=\"\"\n        />\n      </>\n    );\n  };\n\n  const randomNum: number = Math.round(0 - 0.5 + Math.random() * (3000 + 1));\n\n  return (\n    <>\n      <div className=\"detailedPage\">\n        <div className=\"name\">{name}</div>\n        <div className=\"imagesLine\">\n          {sprites ? (\n            Object.keys(sprites).map((spriteName: string) => (\n              <div key={spriteName}>\n                {sprites[spriteName] && (\n                  <Paper elevation={3} className=\"block\" key={randomNum}>\n                    <ImageContainer\n                      url={sprites[spriteName]}\n                      cn={sprites[spriteName]}\n                      fallback={fallbackSprites}\n                    />\n                  </Paper>\n                )}\n              </div>\n            ))\n          ) : (\n              <>\n                {[1, 2, 3, 4].map((\n                  n: number // trash code just for generate placeholder\n                ) => (\n                  <Paper elevation={3} key={randomNum + n} className=\"block\">\n                    <Loader\n                      type=\"TailSpin\"\n                      height={50}\n                      width={50}\n                      color={\"red\"}\n                    />\n                  </Paper>\n                ))}\n              </>\n            )}\n        </div>\n        <div className=\"mainInformations\">\n          <div className=\"skills\">\n            <Stats weight={weight} stats={stats} />\n            <Abilities abilities={abilities} />\n          </div>\n\n          <Paper elevation={3} className=\"bigImage\">\n            {evolutionChain && <ImageContainer url={evolutionChain.imageHQ} cn={\"bigImage\"} fallback={fallbackEvo(evolutionChain.placeholderBase64)} />}\n          </Paper>\n        </div>\n\n        <EvolutionForms\n          evolutionChain={evolutionChain}\n          currentPokemon={name}\n          pokemonsArr={POKEMONS}\n        />\n      </div>\n    </>\n  );\n};\n\nconst ConnectedDetailedPage = connect((store: Props) => {\n  return {\n    detailsPage: store.detailsPage,\n  };\n})(DetailedPage);\n\nexport default (props: any) => (\n  <Provider store={store}>\n    <ConnectedDetailedPage {...props} />\n  </Provider>\n);\n","import store from \"Store/store\";\nimport axios from \"axios\";\n\nexport let getRandomPokemon = async (amount = 806) => {\n  const randomNumber = Math.floor(1 + Math.random() * amount);\n  const URL = `https://pokeapi.co/api/v2/pokemon/${randomNumber}/`;\n\n  store.dispatch({ type: \"RANDOM_POKEMON_FETCHING_START\" });\n\n  await axios\n    .get(URL)\n    .then(async (response) => {\n      let randomPokemons = response.data;\n\n      await store.dispatch({ type: \"ADD_RANDOM_POKEMON\", randomPokemons });\n      await store.dispatch({ type: \"RANDOM_POKEMON_FETCHING_END\" });\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n \n\nexport const setDelailedPageData = async ( pokemon_id: number ) => {\n  const URL = `https://pokeapi.co/api/v2/pokemon/${pokemon_id}/`;\n  await axios.get(URL).then(async (response) => {\n    const page = response.data;\n\n    delete page.sprites.other;\n    delete page.sprites.versions;\n\n    await store.dispatch({ type: \"SET_DETAILS_PAGE\", page });\n  });\n};\n"],"sourceRoot":""}