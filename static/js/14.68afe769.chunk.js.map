{"version":3,"sources":["utils/API.js","components/DetailedPage/Stats.jsx","components/DetailedPage/Abilities.jsx","components/DetailedPage/EvolutionForms.jsx","components/DetailedPage/DetailedPage.jsx"],"names":["getRandomPokemon","a","amount","randomNumber","Math","floor","random","URL","axios","get","then","response","randomPokemons","data","store","dispatch","type","catch","error","console","log","setDelailedPageData","event","isSearch","pokemon_id","currentTarget","closest","dataset","id","page","sprites","other","versions","Stats","props","stats","weight","className","Paper","elevation","map","i","key","stat","name","base_stat","Abilities","abilities","ability","ImageContainer","lazy","EvolutionForms","pokemonsArr","chainNames","evolutionChain","chain","currentPokemon","useState","setChain","useEffect","arr","forEach","index","image","find","o","species_name","placeholderBase64","push","FormTitle","length","to","data-pokemon_id","onClick","fallback","src","alt","url","cn","ConnectedDetailedPage","connect","detailsPage","detailsPageTest","setEvolutionChain","pokemonObj","data-testid","Object","keys","spriteName","height","width","color","n","imageHQ"],"mappings":"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","file":"static/js/14.68afe769.chunk.js","sourcesContent":["import store from \"@Store\";\nimport axios from \"axios\";\n\nexport let getRandomPokemon = async (amount = 806) => {\n  const randomNumber = Math.floor(1 + Math.random() * amount);\n  const URL = `https://pokeapi.co/api/v2/pokemon/${randomNumber}/`;\n\n  await axios\n    .get(URL)\n    .then(async (response) => {\n      let randomPokemons = response.data;\n      await store.dispatch({ type: \"ADD_RANDOM_POKEMON\", randomPokemons });\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n};\n\nexport const setDelailedPageData = async (event, isSearch) => {\n  let pokemon_id;\n\n  if (typeof event === \"number\") {\n    pokemon_id = event;\n  } else {\n    if (isSearch === true) {\n      pokemon_id = event.currentTarget.closest(\"LI\").dataset.id;\n    } else {\n      pokemon_id = event.currentTarget.dataset.pokemon_id;\n    }\n  }\n\n  const URL = `https://pokeapi.co/api/v2/pokemon/${pokemon_id}/`;\n  await axios.get(URL).then(async (response) => {\n    const page = response.data;\n\n    delete page.sprites.other;\n    delete page.sprites.versions;\n\n    await store.dispatch({ type: \"SET_DETAILS_PAGE\", page });\n  });\n};\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PropTypes from \"prop-types\";\n\nconst Stats = (props) => {\n  const { stats, weight } = props;\n\n  return (\n    <div className=\"stats\">\n      <Paper elevation={3} className=\"statsUL\">\n        <div className=\"skills_title\">Stats</div>\n        {stats &&\n          stats.map((i, key) => (\n            <li className=\"statsLI\" key={key}>\n              {i.stat.name} {i.base_stat}\n            </li>\n          ))}\n        <li className=\"statsLI\">weight {weight}kg</li>\n      </Paper>\n    </div>\n  );\n};\n\nexport default Stats;\n\nStats.propTypes = {\n  stats: PropTypes.array,\n  weight: PropTypes.number,\n};\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PropTypes from \"prop-types\";\n\nconst Abilities = (props) => {\n  const { abilities } = props;\n\n  return (\n    <div className=\"abilities\">\n      <Paper elevation={3} className=\"abilitiesUL\">\n        <div className=\"skills_title\">Abilities</div>\n\n        {abilities &&\n          abilities.map((i, key) => (\n            <li className=\"abilitiesLI\" key={key}>\n              {key + 1}: {i.ability.name}\n            </li>\n          ))}\n      </Paper>\n    </div>\n  );\n};\n\nexport default Abilities;\n\nAbilities.propTypes = {\n  abilities: PropTypes.array,\n};\n","import React, { lazy, Suspense, useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport find from \"lodash.find\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PropTypes from \"prop-types\";\n\nimport { setDelailedPageData } from \"@APIutils\";\n\nconst ImageContainer = lazy(() => import(\"@ImageContainer\"));\n\nconst EvolutionForms = (props) => {\n  const { pokemonsArr } = props;\n  const chainNames = props?.evolutionChain?.chain;\n  const currentPokemon = props?.currentPokemon;\n  const [chain, setChain] = useState([]);\n\n  useEffect(() => {\n    let arr = [];\n\n    chainNames &&\n      chainNames.forEach((index) => {\n        index.image = find(\n          pokemonsArr,\n          (o) => o.name === index.species_name\n        ).image;\n        index.id = find(pokemonsArr, (o) => o.name === index.species_name).id;\n        index.placeholderBase64 = find(\n          pokemonsArr,\n          (o) => o.name === index.species_name\n        ).placeholderBase64;\n        arr.push(index);\n      });\n    setChain(arr);\n  }, [chainNames, pokemonsArr]);\n\n  const FormTitle = () => {\n    return (\n      <div className=\"formsTitle\">\n        {chain.length >= 2 ? <span>All forms:</span> : <span>Form:</span>}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <FormTitle />\n\n      <div className=\"evolutionForms\">\n        {chain &&\n          chain.map((index, key) => (\n            <NavLink\n              to={`/detailedPage/pokemon/${index.id}`}\n              data-pokemon_id={index.id}\n              onClick={setDelailedPageData}\n              key={key}\n            >\n              <Paper\n                elevation={3}\n                className={\n                  currentPokemon === index.species_name\n                    ? \"evoForm currentPokemon\"\n                    : \"evoForm\"\n                }\n              >\n                <Suspense\n                  fallback={\n                    <img\n                      src={index.placeholderBase64}\n                      className=\"evoFormImg placeholderBase64\"\n                      alt=\"placeholderBase64\"\n                    />\n                  }\n                >\n                  <ImageContainer url={index.image} cn={\"evoFormImg\"} />\n                </Suspense>\n                <div className=\"pokemonName\">{index.species_name}</div>\n              </Paper>\n            </NavLink>\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default EvolutionForms;\n\nEvolutionForms.propTypes = {\n  pokemonsArr: PropTypes.array,\n  chainNames: PropTypes.array,\n  currentPokemon: PropTypes.string,\n};\n","import React, { lazy, Suspense, useEffect, useState } from \"react\";\nimport { Provider, connect } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\nimport PropTypes from \"prop-types\";\n\nimport Stats from \"@Stats\";\nimport Abilities from \"@Abilities\";\nimport EvolutionForms from \"@EvolutionForms\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport store from \"@Store\";\nimport find from \"lodash.find\";\n\nimport \"./styles/style.scss\";\n\nconst ImageContainer = lazy(() => import(\"@ImageContainer\"));\n\nconst DetailedPage = (props) => {\n  const data = props.detailsPageTest || props.detailsPage;\n  const { sprites, name } = data;\n  const {\n    detailsPage: { abilities, stats, weight },\n    pokemonsArr,\n  } = props;\n  const [evolutionChain, setEvolutionChain] = useState();\n\n  useEffect(() => {\n    let pokemonObj = find(pokemonsArr, (o) => o.name === data.name);\n    pokemonObj && setEvolutionChain(pokemonObj);\n  }, [data, pokemonsArr]);\n\n  return (\n    <>\n      <div className=\"detailedPage\" data-testid=\"detailedPageTest\">\n        <div className=\"name\">{name}</div>\n        <div className=\"imagesLine\">\n          {sprites ? (\n            Object.keys(sprites).map(\n              (spriteName) =>\n                sprites[spriteName] && (\n                  <Paper elevation={3} className=\"block\" key={spriteName}>\n                    <Suspense\n                      fallback={\n                        <Loader\n                          type=\"TailSpin\"\n                          height={50}\n                          width={50}\n                          color={\"red\"}\n                        />\n                      }\n                    >\n                      <ImageContainer url={sprites[spriteName]} />\n                    </Suspense>\n                    {/* <div className=\"title\">{spriteName}</div> */}\n                  </Paper>\n                )\n            )\n          ) : (\n            <>\n              {[1, 2, 3, 4].map((\n                n // trashcode just for generate placeholder\n              ) => (\n                <Paper elevation={3} key={n} className=\"block\">\n                  <Loader\n                    type=\"TailSpin\"\n                    height={50}\n                    width={50}\n                    color={\"red\"}\n                  />\n                </Paper>\n              ))}\n            </>\n          )}\n        </div>\n        <div className=\"mainInformations\">\n          <div className=\"skills\">\n            <Stats weight={weight} stats={stats} />\n            <Abilities abilities={abilities} />\n          </div>\n\n          {evolutionChain?.imageHQ && (\n            <Paper elevation={3} className=\"bigImage\">\n              {evolutionChain?.imageHQ && (\n                <Suspense\n                  fallback={\n                    <img\n                      src={evolutionChain?.placeholderBase64}\n                      className=\"placeholderBase64 bigImage\"\n                      alt=\"\"\n                    />\n                  }\n                >\n                  <ImageContainer\n                    url={evolutionChain.imageHQ}\n                    cn={\"bigImage\"}\n                  />\n                </Suspense>\n              )}\n            </Paper>\n          )}\n        </div>\n\n        <EvolutionForms\n          evolutionChain={evolutionChain}\n          currentPokemon={name}\n          pokemonsArr={pokemonsArr}\n        />\n      </div>\n    </>\n  );\n};\n\nconst ConnectedDetailedPage = connect((store) => {\n  return {\n    detailsPage: store.detailsPage,\n    pokemonsArr: store.pokemonsArr,\n  };\n})(DetailedPage);\n\nexport default (props) => (\n  <Provider store={store}>\n    <ConnectedDetailedPage {...props} />\n  </Provider>\n);\n\nDetailedPage.propTypes = {\n  pokemonsArr: PropTypes.array,\n};\n"],"sourceRoot":""}