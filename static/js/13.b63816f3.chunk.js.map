{"version":3,"sources":["components/Search/Search.tsx","components/Player/Player.tsx","components/HeaderLine/HeaderLine.tsx","components/ErrorBoundary/ErrorBoundary.tsx","components/ImageContainer/ImageContainer.tsx"],"names":["fuseOptions","shouldSort","findAllMatches","threshold","location","distance","maxPatternLength","minMatchCharLength","keys","SearchStyled","styled","div","SearchInput","input","Results","StyledLink","NavLink","SearchList","ul","SearchItem","li","Name","Id","Weight","ImageWrapper","Search","pokemonArr","useSelector","state","useState","showResult","setShowResult","searchResult","setSearchResult","ref","useRef","useClickAway","type","name","id","placeholder","onChange","event","value","target","result","Fuse","search","slice","onFocus","autoComplete","aria-label","data-qa","map","i","key","item","to","weight","ImageContainer","url","image","fallback","src","placeholderBase64","alt","Player","useSound","process","play","stop","isPlaying","Button","onClick","variant","color","AppBarStyled","AppBar","BtnRow","HeaderLine","isMainPage","useLocation","pathname","position","SvgIcon","d","ErrorBoundary","error","errorInfo","this","setState","ErrorType","Error","Title","props","children","React","PureComponent","ready","setReady","useEffect","img","Image","onload","IMG","loading","FallbackStyled","deBlur","keyframes"],"mappings":"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","file":"static/js/13.b63816f3.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nimport React, { useState, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { useSelector } from 'react-redux';\n\nimport Fuse from 'fuse.js';\nimport { useClickAway } from 'ahooks';\n\nimport { PokesTypes } from 'types/index';\n\nimport styled from 'styled-components';\n\nimport { ImageContainer } from 'components/ImageContainer/ImageContainer';\n\nlet fuseOptions = {\n  shouldSort: true,\n  findAllMatches: true,\n  threshold: 0.3,\n  location: 0,\n  distance: 10,\n  maxPatternLength: 20,\n  minMatchCharLength: 2,\n  keys: ['name', 'weight', 'id'],\n};\n\ninterface SearchTypes {\n  pokemonArr: PokesTypes[];\n}\n\nconst Search: React.FC = () => {\n  const pokemonArr = useSelector((state: SearchTypes) => state.pokemonArr);\n\n  const [showResult, setShowResult] = useState<boolean>(false);\n  const [searchResult, setSearchResult] = useState<any[]>([]);\n\n  const handleChange = (event: React.SyntheticEvent): void => {\n    const value = (event.target as HTMLInputElement).value;\n    const fuse = new Fuse(pokemonArr, fuseOptions);\n    const result = fuse.search(value).slice(0, 11);\n    setSearchResult(result);\n  };\n\n  const handleFocus = () => {\n    setShowResult(true);\n  };\n\n  const ref: any = useRef<HTMLSpanElement>();\n  useClickAway(() => {\n    setShowResult(false);\n  }, ref);\n\n  return (\n    <SearchStyled>\n      <SearchInput\n        type=\"text\"\n        name=\"searchInput\"\n        id=\"searchInput\"\n        placeholder=\"Pikachu, 25, 900g\"\n        onChange={handleChange}\n        onFocus={handleFocus}\n        autoComplete=\"off\"\n        aria-label=\"Search\"\n        ref={ref}\n      />\n\n      <Results>\n        {showResult && (\n          <SearchList data-qa=\"results\">\n            {searchResult.map((i, key) => (\n              <StyledLink key={(i.item.id, key)} to={`/detailedPage/pokemon/${i.item.name}`}>\n                <SearchItem>\n                  <Name>NAME: {i.item.name}</Name>\n                  <Id>ID: {i.item.id}</Id>\n                  <Weight>WEIGHT: {i.item.weight}</Weight>\n                  <ImageWrapper>\n                    <ImageContainer\n                      url={i.item.image}\n                      fallback={<img src={i.item.placeholderBase64} alt=\"placeholderBase64\" />}\n                    />\n                  </ImageWrapper>\n                </SearchItem>\n              </StyledLink>\n            ))}\n          </SearchList>\n        )}\n      </Results>\n    </SearchStyled>\n  );\n};\n\nconst SearchStyled = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 30rem;\n  max-width: 450px;\n  position: absolute;\n  top: 15px;\n  left: calc(50% - 220px);\n\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\n    position: static;\n    margin-right: 15px;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  width: 100%;\n  padding-left: 15px;\n  position: relative;\n  height: 40px;\n  border-radius: 6px;\n  font-size: 18px;\n\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\n    width: 100%;\n    padding-left: 15px;\n  }\n`;\n\nconst Results = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  z-index: 10;\n  margin-top: 0;\n  box-shadow: 0 1.2px 2.1px rgba(0, 0, 0, 0.07), 0 2.9px 5.1px rgba(0, 0, 0, 0.101), 0 5.4px 9.6px rgba(0, 0, 0, 0.125),\n    0 9.6px 17.2px rgba(0, 0, 0, 0.149), 0 18px 32.2px rgba(0, 0, 0, 0.18), 0 43px 77px rgba(0, 0, 0, 0.25);\n  width: 100%;\n  height: 0;\n\n  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {\n    position: absolute;\n    top: 70px;\n    left: 15px;\n    right: 15px;\n    width: calc(100% - 30px);\n  }\n`;\n\nconst StyledLink = styled(NavLink)`\n  width: 100%;\n  border-bottom: 1px grey solid;\n  color: black;\n  overflow: hidden;\n`;\n\nconst SearchList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  background: white;\n  padding: 0;\n  width: 100%;\n  margin: 5px 0 0;\n`;\n\nconst SearchItem = styled.li`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-around;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 3rem;\n  text-decoration: none;\n  font-size: 1.1rem;\n\n  &:hover {\n    transform: scale(1.02);\n    background: rgb(238, 238, 238);\n    cursor: pointer;\n  }\n\n  &:last-child {\n    border-bottom: 1px transparent solid;\n  }\n`;\n\nconst Name = styled.div`\n  width: 35%;\n`;\n\nconst Id = styled.div`\n  width: 13%;\n  text-align: left;\n`;\n\nconst Weight = styled.div`\n  position: relative;\n  right: 0;\n  width: 22%;\n  text-align: left;\n`;\n\nconst ImageWrapper = styled.div`\n  height: 100%;\n  img {\n    height: 100%;\n  }\n`;\n\nexport default Search;\n","import React from 'react';\nimport useSound from 'use-sound';\nimport { Button } from '@material-ui/core';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\n\nconst Player: React.FC = () => {\n  const [play, { stop, isPlaying }] = useSound(`${process.env.PUBLIC_URL}/sound/pokemon_opening.mp3`);\n\n  const playPause = () => {\n    isPlaying ? stop() : play();\n  };\n\n  return (\n    <Button onClick={playPause} variant=\"contained\" color=\"secondary\">\n      {isPlaying ? <PauseCircleFilledIcon /> : <PlayCircleFilledIcon />}\n    </Button>\n  );\n};\n\nexport default Player;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { useLocation } from 'react-router-dom';\n\nimport Search from 'components/Search/Search';\nimport Player from 'components/Player/Player';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport { Button } from '@material-ui/core';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport styled from 'styled-components';\n\nconst HeaderLine: React.FC = () => {\n  const isMainPage = useLocation().pathname === '/';\n\n  return (\n    <>\n      <AppBarStyled position=\"static\">\n        <BtnRow>\n          <Player />\n\n          {!isMainPage && (\n            <NavLink to=\"/\">\n              <Button variant=\"contained\" color=\"secondary\">\n                <SvgIcon>\n                  <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\n                </SvgIcon>\n              </Button>\n            </NavLink>\n          )}\n        </BtnRow>\n        <Search />\n      </AppBarStyled>\n    </>\n  );\n};\n\nconst AppBarStyled = styled(AppBar)`\n  display: flex;\n  flex-direction: row !important;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  min-height: 70px;\n  padding-left: 20px;\n\n  position: fixed !important;\n  top: 0;\n`;\n\nconst BtnRow = styled.div`\n  display: flex;\n\n  button {\n    margin-right: 10px;\n    font-size: 16px;\n  }\n`;\n\nexport default HeaderLine;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport default class ErrorBoundary extends React.PureComponent {\n  state = { error: null };\n\n  componentDidCatch(error: {}, errorInfo: any) {\n    this.setState({ error });\n    errorInfo.ErrorType = 'ReactError';\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <Error>\n          <Title>Ooops...</Title>\n        </Error>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nconst Error = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 14px;\n  color: #ff3527;\n`;\n","import React, { useEffect, useState } from 'react';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\nimport styled, { keyframes } from 'styled-components';\n\nimport { JSXElement } from 'types/index';\n\ntype PropsType = {\n  url?: string;\n  fallback?: JSXElement | Function;\n};\n\ntype ReadyType = { ready: boolean };\n\nconst ImageContainer = ({ url = '', fallback }: PropsType) => {\n  const [ready, setReady] = useState<boolean>(false);\n\n  useEffect(() => {\n    const img = new Image();\n    img.onload = () => setReady(true);\n    img.src = url;\n\n    return () => {\n      setReady(false);\n    };\n  }, [url]);\n\n  return (\n    <>\n      <ErrorBoundary>\n        <IMG src={url} loading=\"lazy\" ready={ready} />\n        <FallbackStyled ready={ready}>{fallback}</FallbackStyled>\n      </ErrorBoundary>\n    </>\n  );\n};\n\nexport const FallbackStyled = styled.div`\n  display: ${(props: ReadyType) => (props.ready ? 'none' : 'block')};\n  width: auto;\n  height: 100%;\n  filter: blur(18px);\n  overflow: hidden;\n`;\n\nconst deBlur = keyframes`\n    from {\n      filter: blur(18px);\n    }\n\n    to {\n      filter: blur(0px);\n    }\n`;\n\nexport const IMG = styled.img`\n  display: ${(props: ReadyType) => (props.ready ? 'block' : 'none')};\n  width: auto;\n  height: 100%;\n  animation: 0.2s ${deBlur};\n`;\n\nexport { ImageContainer };\n"],"sourceRoot":""}