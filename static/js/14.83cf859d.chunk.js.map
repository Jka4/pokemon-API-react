{"version":3,"sources":["components/PokemonPageAll/ListView.tsx","components/PokemonPageAll/CatalogView.tsx","components/PokemonPageAll/index.tsx"],"names":["ImageContainer","lazy","ListView","pokemonDataArray","useState","pokemon","setPokemon","pokemonCount","setPokemonCount","useEffect","fetchPokemon","arr","i","push","length","className","dataLength","next","hasMore","loader","endMessage","map","to","name","Paper","elevation","url","imageHQ","image","cn","fallback","placeholderBase64","src","alt","id","CatalogView","index","key","Fragment","loading","ConnectedPokemonPageAll","connect","store","pokemonArr","viewTypeIsCatalog","setViewTypeIsCatalog","onClick","props"],"mappings":"uMAUMA,G,MAAiBC,gBAAK,kBAAM,kCAkEnBC,EA5DmB,SAAC,GAAsC,IAAD,IAAnCC,wBAAmC,MAAhB,GAAgB,IACxCC,mBAAkB,IADsB,mBAC/DC,EAD+D,KACtDC,EADsD,OAE9BF,mBAAiB,GAFa,mBAE/DG,EAF+D,KAEjDC,EAFiD,KAItEC,qBAAU,WACRC,MAGC,IAEH,IAAMA,EAAe,WAInB,IAHA,IACIC,EAAe,GAEVC,EAAIL,EAAcK,GAAKL,EAHN,GAGwCK,IAChED,EAAIE,KAAKV,EAAiBS,IAE5BN,GAAW,SAACD,GAAD,4BAA0BA,GAAYM,MACjDH,EAAgBH,EAAQS,OAAS,EAPP,KAkB5B,OACE,mCACE,yBAASC,UAAU,OAAnB,SACE,cAAC,IAAD,CACEC,WAAYX,EAAQS,OACpBG,KAAMP,EACNQ,QAASb,EAAQS,OAAS,IAC1BK,OAAQ,4CACRJ,UAAU,oBACVK,WAAY,mBAAGL,UAAU,cAAb,gCANd,SAQGV,EAAQgB,KAAI,SAAChB,GAAD,OACX,cAAC,IAAD,CAASiB,GAAE,gCAA2BjB,EAAQkB,MAA9C,SACE,eAACC,EAAA,EAAD,CAAOC,UAAW,EAAGV,UAAU,mBAA/B,UACE,qBAAKA,UAAU,cAAf,SACE,cAACf,EAAD,CACE0B,IAAKrB,EAAQsB,SAAWtB,EAAQuB,MAChCC,GAAI,mBACJC,UA1BAC,EA0BmB1B,EAAQ0B,kBAxBzC,mCACE,qBAAKC,IAAKD,EAAmBhB,UAAU,2BAA2BkB,IAAI,6BA0B9D,qBAAKlB,UAAU,cAAf,SAA8BV,EAAQkB,WATiBlB,EAAQ6B,IApB5D,IAACH,YC7Bd/B,G,OAAiBC,gBAAK,kBAAM,kCA4BnBkC,EAtBsB,SAAC,GAAsC,IAAD,IAAnChC,wBAAmC,MAAhB,GAAgB,EASzE,OACE,qBAAKY,UAAU,UAAf,SACGZ,EAAiBkB,KAAI,SAACe,EAAOC,GAAR,OACpB,cAAC,IAAMC,SAAP,UACE,cAAC,IAAD,CAAShB,GAAE,uCAA2Bc,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAOb,MAA7C,SACE,cAAC,EAAD,CAAgBG,IAAG,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAOR,MAAOC,GAAG,mBAAmBC,UAbjDC,EAamE,OAACK,QAAD,IAACA,OAAD,EAACA,EAAOL,kBAXzF,mCACE,qBAAKQ,QAAQ,OAAOP,IAAKD,EAAmBhB,UAAU,2BAA2BkB,IAAI,4BASzBI,IADvCA,GAXV,IAACN,Q,oCCqCdS,EAA0BC,aAAQ,SAACC,GACvC,MAAO,CACLvC,iBAAkBuC,EAAMC,cAFIF,EAtCQ,SAAC,GAAiC,IAA/BtC,EAA8B,EAA9BA,iBAA8B,EACrBC,oBAAkB,GADG,mBAChEwC,EADgE,KAC7CC,EAD6C,KAGvE,OACE,qCACE,qBAAK9B,UAAU,WAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAU,aAAa+B,QAAS,kBAAMD,GAAsBD,IAAjE,SACIA,EASA,qCACE,iDACA,sBAAM7B,UAAU,YAAhB,eACA,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,SAZJ,qCACE,8CACA,sBAAMA,UAAU,YAAhB,eACA,qBAAKA,UAAU,OAAf,SACE,cAAC,IAAD,eAgBV6B,EAGA,cAAC,EAAD,CAAazC,iBAAkBA,IAF/B,cAAC,EAAD,CAAUA,iBAAkBA,UAcrB,yBAAC4C,EAAD,uDAAS,GAAT,OACb,cAAC,IAAD,CAAUL,MAAOA,IAAjB,SACE,cAACF,EAAD,eAA6BO,Q","file":"static/js/14.83cf859d.chunk.js","sourcesContent":["import React, { lazy, useState, useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { NavLink } from 'react-router-dom';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport './styles/style.scss';\n\nimport { Pokes } from 'types/index';\n\nconst ImageContainer = lazy(() => import('components/ImageContainer/ImageContainer'));\n\ntype Props = {\n  pokemonDataArray: Pokes[];\n};\n\nconst ListView: React.FC<Props> = ({ pokemonDataArray = [] }: Props) => {\n  const [pokemon, setPokemon] = useState<Pokes[]>([]);\n  const [pokemonCount, setPokemonCount] = useState<number>(0);\n\n  useEffect(() => {\n    fetchPokemon();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const fetchPokemon = () => {\n    const howMuchToDownload = 20;\n    let arr: Pokes[] = [];\n\n    for (let i = pokemonCount; i <= pokemonCount + howMuchToDownload; i++) {\n      arr.push(pokemonDataArray[i]);\n    }\n    setPokemon((pokemon: Pokes[]) => [...pokemon, ...arr]);\n    setPokemonCount(pokemon.length + 1 + howMuchToDownload);\n  };\n\n  const fallback = (placeholderBase64: string) => {\n    return (\n      <>\n        <img src={placeholderBase64} className=\"placeholderBase64 deBlur\" alt=\"placeholderBase64\" />\n      </>\n    );\n  };\n\n  return (\n    <>\n      <section className=\"main\">\n        <InfiniteScroll\n          dataLength={pokemon.length}\n          next={fetchPokemon}\n          hasMore={pokemon.length < 758}\n          loader={<h4>Loading...</h4>}\n          className=\"allPokemonWrapper\"\n          endMessage={<p className=\"pokemon-end\">No more pokemon :(</p>}\n        >\n          {pokemon.map((pokemon: Pokes) => (\n            <NavLink to={`/detailedPage/pokemon/${pokemon.name}`} key={pokemon.id}>\n              <Paper elevation={3} className=\"smallPokemonCard\">\n                <div className=\"pokemonLogo\">\n                  <ImageContainer\n                    url={pokemon.imageHQ || pokemon.image}\n                    cn={'pokemonImageCard'}\n                    fallback={fallback(pokemon.placeholderBase64)}\n                  />\n                </div>\n                <div className=\"pokemonName\">{pokemon.name}</div>\n              </Paper>\n            </NavLink>\n          ))}\n        </InfiniteScroll>\n      </section>\n    </>\n  );\n};\n\nexport default ListView;\n","import React, { lazy } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport 'react-tippy/dist/tippy.css';\nimport './styles/style.scss';\n\nimport { Pokes } from 'types/index';\n\nconst ImageContainer = lazy(() => import('components/ImageContainer/ImageContainer'));\n\ntype Props = {\n  pokemonDataArray: Pokes[];\n};\n\nconst CatalogView: React.FC<Props> = ({ pokemonDataArray = [] }: Props) => {\n  const fallback = (placeholderBase64: string) => {\n    return (\n      <>\n        <img loading=\"lazy\" src={placeholderBase64} className=\"placeholderBase64 deBlur\" alt=\"placeholderBase64\" />\n      </>\n    );\n  };\n\n  return (\n    <div className=\"wrapper\">\n      {pokemonDataArray.map((index, key) => (\n        <React.Fragment key={key}>\n          <NavLink to={`/detailedPage/pokemon/${index?.name}`} key={key}>\n            <ImageContainer url={index?.image} cn=\"pokemonImageCard\" fallback={fallback(index?.placeholderBase64)} />\n          </NavLink>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport default CatalogView;\n","/* eslint-disable import/no-anonymous-default-export */\nimport React, { useState } from 'react';\nimport { Provider, connect } from 'react-redux';\n\nimport store from 'Store/store';\n\nimport ListView from './ListView';\nimport CatalogView from './CatalogView';\n\nimport AppsIcon from '@material-ui/icons/Apps';\nimport BlurOnOutlinedIcon from '@material-ui/icons/BlurOnOutlined';\n\nimport { Pokes, IStoreType } from 'types/index';\n\nconst PokemonPageAll: React.FC<Pokes> = ({ pokemonDataArray }: Pokes) => {\n  const [viewTypeIsCatalog, setViewTypeIsCatalog] = useState<boolean>(false);\n\n  return (\n    <>\n      <div className=\"viewType\">\n        <div className=\"viewTypeInner\">\n          <div className=\"innerBlock\" onClick={() => setViewTypeIsCatalog(!viewTypeIsCatalog)}>\n            {!viewTypeIsCatalog ? (\n              <>\n                <span>List view:</span>\n                <span className=\"separator\">|</span>\n                <div className=\"list\">\n                  <BlurOnOutlinedIcon />\n                </div>\n              </>\n            ) : (\n              <>\n                <span>Catalog view:</span>\n                <span className=\"separator\">|</span>\n                <div className=\"catalog\">\n                  <AppsIcon />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {!viewTypeIsCatalog ? (\n        <ListView pokemonDataArray={pokemonDataArray} />\n      ) : (\n        <CatalogView pokemonDataArray={pokemonDataArray} />\n      )}\n    </>\n  );\n};\n\nconst ConnectedPokemonPageAll = connect((store: IStoreType) => {\n  return {\n    pokemonDataArray: store.pokemonArr,\n  };\n})(PokemonPageAll);\n\nexport default (props = {}) => (\n  <Provider store={store}>\n    <ConnectedPokemonPageAll {...props} />\n  </Provider>\n);\n"],"sourceRoot":""}