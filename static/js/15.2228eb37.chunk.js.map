{"version":3,"sources":["utils/ErrorBoundary.js","components/ImageContainer/ImageContainer.tsx"],"names":["ErrorBoundary","state","error","errorInfo","this","setState","ErrorType","className","props","children","React","PureComponent","ImageContainer","url","cn","fallback","useState","ready","setReady","useEffect","img","Image","onload","src","alt","style","display","loading"],"mappings":"+KAEqBA,E,4MACnBC,MAAQ,CAAEC,MAAO,M,gEAECA,GAAwB,IAAjBC,EAAgB,uDAAJ,GACnCC,KAAKC,SAAS,CAAEH,UAChBC,EAAUG,UAAY,e,+BAItB,OAAIF,KAAKH,MAAMC,MAEX,qBAAKK,UAAU,gBAAf,SACE,qBAAKA,UAAU,oBAAf,wBAKCH,KAAKI,MAAMC,a,GAjBqBC,IAAMC,eCiClCC,UAxBQ,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,IAAKC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,SAAoC,EAC3CC,oBAAkB,GADyB,mBAC9DC,EAD8D,KACvDC,EADuD,KAarE,OAVAC,qBAAU,WACR,IAAMC,EAAM,IAAIC,MAIhB,OAHAD,EAAIE,OAAS,kBAAMJ,GAAS,IAC5BE,EAAIG,IAAMV,EAEH,WACLK,GAAS,MAEV,CAACL,IAGF,mCACE,eAAC,EAAD,YACII,GAAS,mCAAuB,oBAAbF,EAA0BA,IAAaA,IAE5D,qBAAKQ,IAAKV,EAAKW,IAAKV,EAAIP,UAAWO,EAAIW,MAAO,CAAEC,QAAST,EAAQ,QAAU,QAAUU,QAAQ","file":"static/js/15.2228eb37.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class ErrorBoundary extends React.PureComponent {\n  state = { error: null };\n\n  componentDidCatch(error, errorInfo = {}) {\n    this.setState({ error });\n    errorInfo.ErrorType = \"ReactError\";\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <div className=\"errorBoundary\">\n          <div className=\"textErrorBoundary\">Ooops...</div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import { useEffect, useState } from 'react';\nimport ErrorBoundary from 'utils/ErrorBoundary';\n\nimport { JSXElement } from 'types';\n\ninterface ImageContainerProps {\n  url: string;\n  cn?: string;\n  fallback?: JSXElement | Function;\n}\n\nconst ImageContainer = ({ url, cn, fallback }: ImageContainerProps) => {\n  const [ready, setReady] = useState<boolean>(false);\n\n  useEffect(() => {\n    const img = new Image();\n    img.onload = () => setReady(true);\n    img.src = url;\n\n    return () => {\n      setReady(false);\n    };\n  }, [url]);\n\n  return (\n    <>\n      <ErrorBoundary>\n        {!ready && <>{typeof fallback === 'function' ? fallback() : fallback}</>}\n\n        <img src={url} alt={cn} className={cn} style={{ display: ready ? 'block' : 'none' }} loading=\"lazy\" />\n      </ErrorBoundary>\n    </>\n  );\n};\n\nexport default ImageContainer;\n"],"sourceRoot":""}