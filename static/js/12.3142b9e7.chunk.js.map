{"version":3,"sources":["components/DetailedPage/Stats.tsx","components/DetailedPage/Abilities.tsx","components/DetailedPage/EvolutionForms.tsx","components/DetailedPage/Sprites.tsx","components/DetailedPage/BigImage.tsx","components/DetailedPage/DetailedPage.tsx"],"names":["Stats","stats","weight","showStats","undefined","length","className","Paper","elevation","map","el","stat","name","base_stat","color","highlightColor","height","width","Abilities","abilities","element","ability","EvolutionForms","currentPokemon","pokemonArr","useState","chain","setChain","useMemo","pokemonObj","find","o","arr","forEach","index","pokemonName","species_name","image","id","placeholderBase64","push","FormTitle","to","data-pokemon_id","src","alt","loading","Sprites","sprites","fallback","circle","Object","keys","spriteName","ImageContainer","lazy","BigImage","bigImage","imageHQ","style","overflow","url","cn","filter","ConnectedDetailedPage","connect","store","setBigImage","detailsPage","setDetailsPage","useLocation","pathname","split","pop","useEffect","URL","axios","get","then","a","response","poke","data","other","versions","pokemon","props"],"mappings":"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","file":"static/js/12.3142b9e7.chunk.js","sourcesContent":["import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\ntype Props = {\n  stats: StatsElements[];\n  weight: number;\n};\n\ntype StatsElements = {\n  base_stat: number;\n  stat: {\n    name: string;\n  };\n};\n\nconst Stats: React.FC<Props> = ({ stats, weight }: Props) => {\n  const fallbackSkeletons = () => {\n    return (\n      <SkeletonTheme color=\"#53aeff\" highlightColor=\"#0066be\">\n        {[1, 2, 3, 4, 5, 6].map((el) => (\n          <p key={el}>\n            <Skeleton height={15} width={100} />\n          </p>\n        ))}\n      </SkeletonTheme>\n    );\n  };\n\n  const showStats = stats !== undefined && stats?.length !== 0;\n\n  return (\n    <div className=\"stats\">\n      <Paper elevation={3} className=\"statsUL\">\n        <div className=\"skills_title\">Stats</div>\n        {showStats\n          ? stats.map((el: StatsElements) => (\n              <li className=\"statsLI\" key={el.stat.name}>\n                {el.stat.name}: {el.base_stat}\n              </li>\n            ))\n          : fallbackSkeletons()}\n\n        {showStats && <li className=\"statsLI\">weight: {weight} kg</li>}\n      </Paper>\n    </div>\n  );\n};\n\nexport default Stats;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\ntype Props = {\n  abilities: AbilityElements[];\n};\n\ntype AbilityElements = {\n  ability: {\n    url: string;\n    name: string;\n  };\n};\n\nconst Abilities: React.FC<Props> = ({ abilities = [] }: Props) => {\n  const fallbackSkeletons = () => {\n    return (\n      <SkeletonTheme color=\"#53aeff\" highlightColor=\"#0066be\">\n        {[1, 2, 3, 4, 5, 6].map((el) => (\n          <p key={el}>\n            <Skeleton height={15} width={100} />\n          </p>\n        ))}\n      </SkeletonTheme>\n    );\n  };\n\n  return (\n    <div className=\"abilities\">\n      <Paper elevation={3} className=\"abilitiesUL\">\n        <div className=\"skills_title\">Abilities</div>\n        {abilities.length !== 0\n          ? abilities.map((element: AbilityElements) => (\n              <li className=\"abilitiesLI\" key={element.ability.name}>\n                - {element.ability.name}\n              </li>\n            ))\n          : fallbackSkeletons()}\n      </Paper>\n    </div>\n  );\n};\n\nexport default Abilities;\n","import React, { useState, useMemo } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport find from 'lodash.find';\nimport Paper from '@material-ui/core/Paper';\n\ntype EvolutionFormsTypes = {\n  currentPokemon: any;\n  pokemonArr: any[];\n};\n\ntype ChainElements = {\n  image: string;\n  species_name: any;\n  placeholderBase64: string;\n  id: number | string;\n  [key: string]: any;\n};\n\nconst EvolutionForms: React.FC<EvolutionFormsTypes> = ({ currentPokemon, pokemonArr }: EvolutionFormsTypes) => {\n  let [chain, setChain] = useState<any[]>([]);\n\n  useMemo(() => {\n    const pokemonObj: any = find(pokemonArr, (o) => o.name === currentPokemon);\n    let arr: any[] = [];\n\n    pokemonObj?.chain.forEach((index: ChainElements) => {\n      const pokemonName = index.species_name;\n      index.image = find(pokemonArr, (o) => o.name === pokemonName)?.image || '';\n      index.id = find(pokemonArr, (o) => o.name === pokemonName)?.id || '';\n      index.placeholderBase64 = find(pokemonArr, (o) => o.name === pokemonName)?.placeholderBase64 || '';\n      arr.push(index);\n    });\n\n    setChain(arr);\n  }, [currentPokemon, pokemonArr]);\n\n  const FormTitle = () => {\n    return <div className=\"formsTitle\">{chain.length >= 2 ? <span>All forms:</span> : <span>Form:</span>}</div>;\n  };\n\n  return (\n    <>\n      <FormTitle />\n\n      <div className=\"evolutionForms\">\n        {chain.map((index: ChainElements) => (\n          <NavLink to={`/detailedPage/pokemon/${index.species_name}`} data-pokemon_id={index.id} key={index.id}>\n            <Paper\n              elevation={3}\n              className={currentPokemon === index.species_name ? 'evoForm currentPokemon' : 'evoForm'}\n            >\n              <img src={index.image} className=\"evoFormImg deBlur\" alt=\"evoFormImg\" loading=\"lazy\" />\n              <div className=\"pokemonName\">{index.species_name}</div>\n            </Paper>\n          </NavLink>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default EvolutionForms;\n","import React, { Suspense } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\ntype Props = {\n  sprites: any;\n};\n\nconst Sprites: React.FC<Props> = ({ sprites = {} }: Props) => {\n  const SpritesPlaceholders = () => {\n    return (\n      <>\n        {[1, 2, 3, 4].map((el) => (\n          <Paper key={el} elevation={3} className=\"block\">\n            <SkeletonTheme color=\"#6cff79\" highlightColor=\"yellow\">\n              <Skeleton className=\"solo\" circle={true} height={60} width={60} />\n            </SkeletonTheme>\n          </Paper>\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"imagesLine\">\n        <Suspense fallback={SpritesPlaceholders()}>\n          {Object.keys(sprites).map((spriteName: string) => (\n            <div key={spriteName}>\n              {sprites[spriteName] && (\n                <Paper elevation={3} className=\"block\">\n                  <img src={sprites[spriteName]} alt={sprites[spriteName]} className={sprites[spriteName]} />\n                </Paper>\n              )}\n            </div>\n          ))}\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nexport default Sprites;\n","import React, { lazy } from 'react';\nimport Paper from '@material-ui/core/Paper';\n\nconst ImageContainer = lazy(() => import('components/ImageContainer/ImageContainer'));\n\ntype Props = {\n  bigImage: any;\n};\n\nconst BigImage: React.FC<Props> = ({ bigImage = {} }: Props) => {\n  const { imageHQ, placeholderBase64 } = bigImage;\n\n  const placeholder = () => {\n    return (\n      <>\n        <img src={placeholderBase64} className=\"bigImage \" alt=\"\" style={{ filter: 'blur(18px)' }} />\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Paper elevation={3} style={{ overflow: 'hidden' }}>\n        <ImageContainer url={imageHQ} cn={'bigImage'} fallback={placeholder} />\n      </Paper>\n    </>\n  );\n};\n\nexport default BigImage;\n","/* eslint-disable import/no-anonymous-default-export */\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { Provider, connect } from 'react-redux';\nimport store from 'Store/store';\n\nimport Stats from './Stats';\nimport Abilities from './Abilities';\nimport EvolutionForms from './EvolutionForms';\nimport Sprites from './Sprites';\nimport BigImage from './BigImage';\n\nimport axios from 'axios';\n\nimport './styles/style.scss';\n\ntype DetailedPageType = {\n  pokemonArr: any[];\n};\n\ntype bigImageTypes = {\n  placeholderBase64: string;\n  imageHQ: string;\n};\n\ntype DetailsPageTypes = {\n  weight: number;\n  abilities: {\n    ability: {\n      url: string;\n      name: string;\n    };\n  }[];\n  stats: {\n    base_stat: number;\n    stat: {\n      name: string;\n    };\n  }[];\n  sprites: any[string];\n  name: string;\n};\n\nconst DetailedPage: React.FC<DetailedPageType> = ({ pokemonArr = [] }: DetailedPageType) => {\n  let [bigImage, setBigImage] = useState<bigImageTypes>();\n  let [detailsPage, setDetailsPage] = useState<any>();\n\n  const currentPokemon = useLocation().pathname.split('/').pop();\n  const { abilities, stats, weight, sprites }: DetailsPageTypes = detailsPage || {};\n\n  useEffect(() => {\n    setDetailsPage({});\n\n    const URL = `https://pokeapi.co/api/v2/pokemon/${currentPokemon}/`;\n    axios.get(URL).then(async (response) => {\n      const poke = response.data;\n\n      delete poke.sprites.other;\n      delete poke.sprites.versions;\n\n      setDetailsPage(poke);\n    });\n  }, [currentPokemon]);\n\n  useEffect(() => {\n    const pokemon: any = pokemonArr.find((el) => el.name === currentPokemon);\n    setBigImage(pokemon);\n  }, [currentPokemon, pokemonArr]);\n\n  return (\n    <>\n      <div className=\"detailedPage\">\n        <div className=\"name\">{currentPokemon || 'POKEMON'}</div>\n\n        <EvolutionForms currentPokemon={currentPokemon} pokemonArr={pokemonArr} />\n        <div className=\"mainInformation\">\n          <div className=\"skills\">\n            <Stats weight={weight} stats={stats} />\n            <Abilities abilities={abilities} />\n          </div>\n          <BigImage bigImage={bigImage} />\n        </div>\n\n        <Sprites sprites={sprites} />\n      </div>\n    </>\n  );\n};\n\n// export default DetailedPage;\n\nconst ConnectedDetailedPage = connect((store: DetailedPageType) => {\n  return {\n    pokemonArr: store.pokemonArr,\n  };\n})(DetailedPage);\n\nexport default (props = {}) => (\n  <Provider store={store}>\n    <ConnectedDetailedPage {...props} />\n  </Provider>\n);\n"],"sourceRoot":""}