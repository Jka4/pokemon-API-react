{"version":3,"sources":["components/DetailedPage/Stats.tsx","components/DetailedPage/Abilities.tsx","components/DetailedPage/EvolutionForms.tsx","components/DetailedPage/Sprites.tsx","components/DetailedPage/BigImage.tsx","components/DetailedPage/DetailedPage.tsx"],"names":["Stats","stats","weight","showStats","undefined","length","className","Paper","elevation","map","el","stat","name","base_stat","color","highlightColor","height","width","Abilities","abilities","element","ability","EvolutionForms","currentPokemon","useState","chain","setChain","useMemo","pokemonObj","find","POKEMON","o","arr","forEach","index","pokemonName","species_name","image","id","placeholderBase64","push","FormTitle","to","data-pokemon_id","src","alt","loading","Sprites","sprites","fallback","circle","Object","keys","spriteName","ImageContainer","lazy","BigImage","bigImage","url","imageHQ","cn","DetailedPage","setBigImage","detailsPage","setDetailsPage","useLocation","pathname","split","pop","useEffect","URL","axios","get","then","a","response","poke","data","other","versions","pokemon"],"mappings":"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","file":"static/js/13.daeb7949.chunk.js","sourcesContent":["import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\ntype Props = {\n  stats: StatsElements[];\n  weight: number;\n}\n\ntype StatsElements = {\n  base_stat: number;\n  stat: {\n    name: string;\n  };\n}\n\nconst Stats: React.FC<Props> = ({ stats, weight }: Props) => {\n\n  const fallbackSkeletons = () => {\n    return (\n      <SkeletonTheme color=\"#53aeff\" highlightColor=\"#0066be\">\n        {[1, 2, 3, 4, 5, 6].map(el => (\n          <p key={el} >\n            <Skeleton height={15} width={100} />\n          </p>\n        ))}\n      </SkeletonTheme>\n    );\n  };\n\n  const showStats = stats !== undefined && stats?.length !== 0;\n\n  return (\n    <div className=\"stats\">\n      <Paper elevation={3} className=\"statsUL\">\n        <div className=\"skills_title\">Stats</div>\n        {showStats\n          ? stats.map((el: StatsElements) => (\n            <li className=\"statsLI\" key={el.stat.name}>\n              {el.stat.name}: {el.base_stat}\n            </li>\n          ))\n          : (fallbackSkeletons())}\n\n        {showStats && <li className=\"statsLI\">weight: {weight} kg</li>}\n      </Paper>\n    </div>\n  );\n};\n\nexport default Stats;\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\ntype Props = {\n  abilities: AbilityElements[];\n};\n\ntype AbilityElements = {\n  ability: {\n    url: string;\n    name: string;\n  };\n}\n\nconst Abilities: React.FC<Props> = ({ abilities = [] }: Props) => {\n\n  const fallbackSkeletons = () => {\n    return (\n      <SkeletonTheme color=\"#53aeff\" highlightColor=\"#0066be\">\n        {[1, 2, 3, 4, 5, 6].map(el => (\n          <p key={el} >\n            <Skeleton height={15} width={100} />\n          </p>\n        ))}\n      </SkeletonTheme>\n    );\n  };\n\n  return (\n    <div className=\"abilities\">\n      <Paper elevation={3} className=\"abilitiesUL\">\n        <div className=\"skills_title\">Abilities</div>\n        {abilities.length !== 0 ? (abilities.map((element: AbilityElements) => (\n          <li className=\"abilitiesLI\" key={element.ability.name}>\n            - {element.ability.name}\n          </li>\n        ))) : (\n            fallbackSkeletons()\n          )}\n      </Paper>\n    </div>\n  );\n};\n\nexport default Abilities;\n","import React, { useState, useMemo } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport find from 'lodash.find';\nimport Paper from '@material-ui/core/Paper';\nimport POKEMON from 'utils/pokemonDataArray';\n\ntype Props = {\n  currentPokemon: any;\n};\n\ntype ChainElements = {\n  image: string;\n  species_name: any;\n  placeholderBase64: string;\n  id: number | string;\n  [key: string]: any;\n}\n\n\nconst EvolutionForms: React.FC<Props> = ({ currentPokemon }: Props) => {\n  let [chain, setChain] = useState<any[]>([]);\n\n  useMemo(() => {\n    const pokemonObj: any = find(POKEMON, (o) => o.name === currentPokemon);\n    let arr: any[] = [];\n\n    pokemonObj?.chain.forEach((index: ChainElements) => {\n      const pokemonName = index.species_name\n      index.image = find(POKEMON, (o) => o.name === pokemonName)?.image || '';\n      index.id = find(POKEMON, (o) => o.name === pokemonName)?.id || '';\n      index.placeholderBase64 = find(POKEMON, (o) => o.name === pokemonName)?.placeholderBase64 || '';\n      arr.push(index);\n    });\n\n    setChain(arr)\n\n  }, [currentPokemon]);\n\n  const FormTitle = () => {\n    return <div className=\"formsTitle\">{chain.length >= 2 ? <span>All forms:</span> : <span>Form:</span>}</div>;\n  };\n\n  return (\n    <>\n      <FormTitle />\n\n      <div className=\"evolutionForms\">\n        {chain.map((index: ChainElements) => (\n          <NavLink\n            to={`/detailedPage/pokemon/${index.species_name}`}\n            data-pokemon_id={index.id}\n            key={index.id}\n          >\n            <Paper\n              elevation={3}\n              className={currentPokemon === index.species_name ? 'evoForm currentPokemon' : 'evoForm'}\n            >\n              <img src={index.image} className='evoFormImg' alt=\"evoFormImg\" loading='lazy' />\n              <div className=\"pokemonName\">{index.species_name}</div>\n            </Paper>\n          </NavLink>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default EvolutionForms;\n","import React, { Suspense } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\ntype Props = {\n\tsprites: any;\n};\n\nconst Sprites: React.FC<Props> = ({ sprites = {} }: Props) => {\n\n\tconst SpritesPlaceholders = () => {\n\t\treturn (<>\n\t\t\t{[1, 2, 3, 4].map((el) => (\n\t\t\t\t<Paper key={el} elevation={3} className=\"block\">\n\t\t\t\t\t<SkeletonTheme color=\"#6cff79\" highlightColor=\"yellow\">\n\t\t\t\t\t\t<Skeleton className=\"solo\" circle={true} height={60} width={60} />\n\t\t\t\t\t</SkeletonTheme>\n\t\t\t\t</Paper>\n\t\t\t))}\n\t\t</>);\n\t};\n\n\treturn (<>\n\t\t<div className=\"imagesLine\">\n\n\t\t\t<Suspense fallback={SpritesPlaceholders()} >\n\t\t\t\t{Object.keys(sprites).map((spriteName: string) => (\n\t\t\t\t\t<div key={spriteName}>\n\t\t\t\t\t\t{sprites[spriteName] && (\n\t\t\t\t\t\t\t<Paper elevation={3} className=\"block\">\n\t\t\t\t\t\t\t\t<img src={sprites[spriteName]} alt={sprites[spriteName]} className={sprites[spriteName]} />\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</Suspense>\n\n\t\t</div>\n\t</>);\n};\n\nexport default Sprites;\n","import React, { lazy } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst ImageContainer = lazy(() => import(\"components/ImageContainer/ImageContainer\"));\n\ntype Props = {\n\tbigImage: any;\n};\n\nconst BigImage: React.FC<Props> = ({ bigImage = {} }: Props) => {\n\n\tconst placeholder = () => {\n\t\treturn (<>\n\t\t\t<img src={bigImage.placeholderBase64} className=\"bigImage placeholderBase64\" alt=\"\" />\n\t\t</>)\n\t}\n\n\treturn (<>\n\t\t<Paper elevation={3} >\n\t\t\t<ImageContainer url={bigImage.imageHQ} cn={\"bigImage\"} fallback={placeholder()} />\n\t\t</Paper >\n\t</>);\n};\n\nexport default BigImage;\n","/* eslint-disable import/no-anonymous-default-export */\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport Stats from './Stats';\nimport Abilities from './Abilities';\nimport EvolutionForms from './EvolutionForms';\nimport Sprites from './Sprites';\nimport BigImage from './BigImage'\n\n\nimport POKEMON from 'utils/pokemonDataArray';\nimport axios from 'axios';\n\nimport './styles/style.scss';\n\ntype PropsType = {\n  pokemonArr: DetailsPageTypes[] | null;\n  detailsPage: null | any;\n};\n\ntype bigImageTypes = {\n  placeholderBase64: string;\n  imageHQ: string;\n};\n\ntype DetailsPageTypes = {\n  weight: number;\n  abilities: {\n    ability: {\n      url: string;\n      name: string;\n    };\n  }[];\n  stats: {\n    base_stat: number;\n    stat: {\n      name: string;\n    };\n  }[];\n  sprites: any[string];\n  name: string;\n};\n\nconst DetailedPage: React.FC<PropsType> = () => {\n  let [bigImage, setBigImage] = useState<bigImageTypes>();\n  let [detailsPage, setDetailsPage] = useState<any>();\n\n  const currentPokemon = useLocation().pathname.split('/').pop();\n  const { abilities, stats, weight, sprites }: DetailsPageTypes = detailsPage || {};\n\n  useEffect(() => {\n    setDetailsPage({})\n\n    const URL = `https://pokeapi.co/api/v2/pokemon/${currentPokemon}/`;\n    axios.get(URL).then(async (response) => {\n      const poke = response.data;\n\n      delete poke.sprites.other;\n      delete poke.sprites.versions;\n\n      setDetailsPage(poke)\n    });\n  }, [currentPokemon]);\n\n\n  useEffect(() => {\n    const pokemon: any = POKEMON.find((el) => el.name === currentPokemon);\n    setBigImage(pokemon)\n  }, [currentPokemon])\n\n\n  return (\n    <>\n      <div className=\"detailedPage\">\n        <div className=\"name\">{currentPokemon || 'POKEMON'}</div>\n\n        <EvolutionForms currentPokemon={currentPokemon} />\n        <div className=\"mainInformation\">\n          <div className=\"skills\">\n            <Stats weight={weight} stats={stats} />\n            <Abilities abilities={abilities} />\n          </div>\n          <BigImage bigImage={bigImage} />\n        </div>\n\n        <Sprites sprites={sprites} />\n      </div>\n    </>\n  );\n};\n\nexport default DetailedPage;\n"],"sourceRoot":""}