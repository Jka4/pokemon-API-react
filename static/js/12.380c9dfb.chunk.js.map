{"version":3,"sources":["components/Catalog/views/BigGrid.tsx","components/Catalog/views/SmallGrid.tsx","components/Catalog/views/CatalogHeader.tsx","components/Catalog/Catalog.tsx","components/ErrorBoundary/ErrorBoundary.tsx","components/ImageContainer/ImageContainer.tsx"],"names":["BigGrid","useState","pokemon","setPokemon","pokemonCount","setPokemonCount","pokemonArr","useSelector","state","useEffect","fetchPokemon","arr","i","push","length","ScrollStyled","dataLength","next","hasMore","loader","endMessage","End","map","to","name","key","id","SmallCard","elevation","Logo","ImageContainer","url","imageHQ","image","fallback","placeholderBase64","src","alt","Name","styled","InfiniteScroll","div","Paper","p","SmallGrid","Wrapper","index","CatalogHeader","changePageType","typeIsBig","ViewTypeInner","InnerBlock","onClick","Title","Separator","Icon","span","React","memo","setTypeIsBig","ErrorBoundary","error","errorInfo","this","setState","ErrorType","Error","props","children","PureComponent","ready","setReady","img","Image","onload","IMG","loading","FallbackStyled"],"mappings":"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","file":"static/js/12.380c9dfb.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport Paper from '@material-ui/core/Paper';\nimport { ImageContainer } from 'components/ImageContainer/ImageContainer';\n\nimport { PokesTypes } from 'types/index';\n\nimport styled from 'styled-components';\n\nconst BigGrid: React.FC = () => {\n  const [pokemon, setPokemon] = useState<PokesTypes[]>([]);\n  const [pokemonCount, setPokemonCount] = useState<number>(0);\n  const pokemonArr = useSelector((state: PokesTypes) => state.pokemonArr);\n\n  useEffect(() => {\n    fetchPokemon();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const fetchPokemon = () => {\n    const howMuchToDownload = 34;\n    let arr: PokesTypes[] = [];\n\n    for (let i = pokemonCount; i <= pokemonCount + howMuchToDownload; i++) {\n      pokemonCount <= 713 && arr.push(pokemonArr[i]);\n    }\n    setPokemon((pokemon: PokesTypes[]) => [...pokemon, ...arr]);\n    setPokemonCount(pokemon.length + 1 + howMuchToDownload);\n  };\n\n  const fallback = (placeholderBase64: string) => {\n    return <img src={placeholderBase64} alt=\"placeholderBase64\" />;\n  };\n\n  return (\n    <>\n      <ScrollStyled\n        dataLength={pokemon.length}\n        next={fetchPokemon}\n        hasMore={pokemonCount <= pokemon.length}\n        loader={<h4>Loading...</h4>}\n        endMessage={<End>Don't have more pokemon :(</End>}\n      >\n        {pokemon.map((pokemon: PokesTypes) => (\n          <NavLink to={`/detailedPage/pokemon/${pokemon.name}`} key={pokemon.id}>\n            <SmallCard elevation={3}>\n              <Logo>\n                <ImageContainer url={pokemon.imageHQ || pokemon.image} fallback={fallback(pokemon.placeholderBase64)} />\n              </Logo>\n              <Name>{pokemon?.name}</Name>\n            </SmallCard>\n          </NavLink>\n        ))}\n      </ScrollStyled>\n    </>\n  );\n};\n\nconst ScrollStyled = styled(InfiniteScroll)`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  justify-content: center;\n  min-height: 100vh;\n  max-width: 900px;\n  margin: 50px auto 100px;\n`;\n\nconst Logo = styled.div`\n  width: 100%;\n  min-height: 160px;\n  text-align: center;\n\n  img,\n  svg {\n    width: 100%;\n    height: auto;\n    object-fit: cover;\n  }\n`;\n\nconst SmallCard = styled(Paper)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  margin: 10px;\n  border-radius: 10px;\n  background: #4c4cffd9 !important;\n  cursor: pointer;\n  width: 160px;\n  min-height: 240px;\n  object-fit: cover;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nconst End = styled.p`\n  margin-top: 40px;\n  width: 100%;\n  text-align: center;\n  font-size: 26px;\n`;\n\nconst Name = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport { BigGrid };\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { PokesTypes } from 'types/index';\n\nimport styled from 'styled-components';\nimport { ImageContainer } from 'components/ImageContainer/ImageContainer';\n\ntype Props = {\n  pokemonArr: PokesTypes[];\n};\n\nconst SmallGrid: React.FC = () => {\n  const pokemonArr = useSelector((state: Props) => state.pokemonArr);\n\n  const fallback = (placeholderBase64: string) => {\n    return <img src={placeholderBase64} alt=\"placeholderBase64\" />;\n  };\n\n  return (\n    <Wrapper>\n      {pokemonArr.map((index, key) => (\n        <NavLink to={`/detailedPage/pokemon/${index?.name}`} key={key}>\n          <ImageContainer url={index.image} fallback={fallback(index.placeholderBase64)} />\n        </NavLink>\n      ))}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  justify-content: center;\n  margin-top: 50px;\n  margin-bottom: 100px;\n  width: 100%;\n  max-width: 100vw;\n\n  a {\n    box-shadow: 0.5px 0 0 0 red, 0 0.5px 0 0 red, 0.5px 0.5px 0 0 red, 0.5px 0 0 0 red inset, 0 0.5px 0 0 red inset;\n    overflow: hidden;\n    width: 65px;\n    height: 65px;\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n\n    &:hover {\n      background: #ff000099;\n      transform: scale(1.2);\n    }\n  }\n`;\n\nexport { SmallGrid };\n","/* eslint-disable import/no-anonymous-default-export */\nimport React from 'react';\n\nimport styled from 'styled-components';\n\nimport AppsIcon from '@material-ui/icons/Apps';\nimport BlurOnOutlinedIcon from '@material-ui/icons/BlurOnOutlined';\n\ntype PropsType = {\n  changePageType: () => void;\n  typeIsBig: boolean;\n};\n\nconst CatalogHeader: React.FC<PropsType> = ({ changePageType, typeIsBig }: PropsType) => {\n  return (\n    <ViewTypeInner>\n      <InnerBlock onClick={() => changePageType()}>\n        <Title>{typeIsBig ? 'Big grid' : 'Small grid'}</Title>\n        <Separator>|</Separator>\n        <Icon>{typeIsBig ? <BlurOnOutlinedIcon /> : <AppsIcon />}</Icon>\n      </InnerBlock>\n    </ViewTypeInner>\n  );\n};\n\nconst Title = styled.span`\n  font-size: 24px;\n  margin-right: 5px;\n`;\n\nconst Separator = styled.span`\n  margin-top: 2px;\n  margin-right: 10px;\n  font-size: 24px;\n`;\n\nconst ViewTypeInner = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  width: 90%;\n`;\n\nconst InnerBlock = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid black;\n  border-radius: 5px;\n  cursor: pointer;\n  padding: 5px 15px 5px 15px;\n  min-width: 200px;\n  color: black;\n  text-decoration: none;\n\n  &:hover {\n    box-shadow: 5px 3px 11px 1px #000000;\n  }\n\n  &:active {\n    box-shadow: 0 1px 0 #00823f;\n  }\n`;\n\nconst Icon = styled.div`\n  margin-top: 4px;\n  cursor: pointer;\n  width: 20px;\n`;\n\nexport { CatalogHeader };\n","/* eslint-disable import/no-anonymous-default-export */\nimport React, { useState } from 'react';\n\nimport { BigGrid } from './views/BigGrid';\nimport { SmallGrid } from './views/SmallGrid';\n\nimport styled from 'styled-components';\n\nimport { CatalogHeader } from './views/CatalogHeader';\n\nconst Catalog: React.FC = () => {\n  const [typeIsBig, setTypeIsBig] = useState(true);\n\n  const changePageType = () => setTypeIsBig(!typeIsBig);\n\n  return (\n    <Wrapper>\n      <CatalogHeader typeIsBig={typeIsBig} changePageType={changePageType} />\n\n      {typeIsBig ? <BigGrid /> : <SmallGrid />}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 100px;\n  width: 100%;\n  user-select: none;\n`;\n\nexport default React.memo(Catalog);\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport default class ErrorBoundary extends React.PureComponent {\n  state = { error: null };\n\n  componentDidCatch(error: {}, errorInfo: any) {\n    this.setState({ error });\n    errorInfo.ErrorType = 'ReactError';\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <Error>\n          <Title>Ooops...</Title>\n        </Error>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nconst Error = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 14px;\n  color: #ff3527;\n`;\n","import React, { useEffect, useState } from 'react';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\nimport styled from 'styled-components';\n\nimport { JSXElement } from 'types/index';\n\ntype PropsType = {\n  url?: string;\n  fallback?: JSXElement | Function;\n};\n\ntype ReadyType = { ready: boolean };\n\nconst ImageContainer = ({ url = '', fallback }: PropsType) => {\n  const [ready, setReady] = useState<boolean>(false);\n\n  useEffect(() => {\n    const img = new Image();\n    img.onload = () => setReady(true);\n    img.src = url;\n\n    return () => {\n      setReady(false);\n    };\n  }, [url]);\n\n  return (\n    <>\n      <ErrorBoundary>\n        <IMG src={url} loading=\"lazy\" ready={ready} />\n        <FallbackStyled ready={ready}>{fallback}</FallbackStyled>\n      </ErrorBoundary>\n    </>\n  );\n};\n\nexport const FallbackStyled = styled.div`\n  display: ${(props: ReadyType) => (props.ready ? 'none' : 'block')};\n  width: auto;\n  height: 100%;\n  filter: blur(18px);\n  overflow: hidden;\n`;\n\nexport const IMG = styled.img`\n  display: ${(props: ReadyType) => (props.ready ? 'block' : 'none')};\n  width: auto;\n  height: 100%;\n  animation: 0.2s linear 0s deBlurAnimation;\n\n  @keyframes deBlurAnimation {\n    from {\n      filter: blur(18px);\n    }\n\n    to {\n      filter: blur(0px);\n    }\n  }\n`;\n\nexport { ImageContainer };\n"],"sourceRoot":""}