{"version":3,"sources":["components/Search/Search.tsx","components/Player/Player.tsx","components/HeaderLine/HeaderLine.tsx"],"names":["ImageContainer","lazy","fuseOptions","shouldSort","tokenize","matchAllTokens","findAllMatches","includeScore","includeMatches","threshold","location","distance","maxPatternLength","minMatchCharLength","keys","Search","pokemonArr","useSelector","state","useState","showResult","setShowResult","searchResult","setSearchResult","ref","useRef","useClickAway","className","type","name","id","placeholder","onChange","event","value","target","result","Fuse","search","slice","onFocus","autoComplete","aria-label","map","i","key","to","item","data-id","weight","url","image","cn","fallback","placeholderBase64","src","alt","Player","useSound","process","play","stop","isPlaying","Tooltip","title","enterDelay","leaveDelay","arrow","Button","onClick","variant","color","HeaderLine","isMainPage","useLocation","pathname","HomeIcon","SvgIcon","d","AppBar","position"],"mappings":"0PAaMA,EAAiBC,gBAAK,kBAAM,kCAE9BC,EAAc,CAChBC,YAAY,EACZC,UAAU,EACVC,gBAAgB,EAChBC,gBAAgB,EAChBC,cAAc,EACdC,gBAAgB,EAChBC,UAAW,GACXC,SAAU,EACVC,SAAU,GACVC,iBAAkB,GAClBC,mBAAoB,EACpBC,KAAM,CAAC,OAAQ,SAAU,OAuEZC,EAhEU,WACvB,IAAMC,EAAaC,aAAY,SAACC,GAAD,OAAwBA,EAAMF,cADhC,EAGOG,oBAAkB,GAHzB,mBAGtBC,EAHsB,KAGVC,EAHU,OAIWF,mBAAgB,IAJ3B,mBAItBG,EAJsB,KAIRC,EAJQ,KAiBvBC,EAAWC,mBACjBC,aAAa,WACXL,GAAc,KACbG,GAMH,OACE,sBAAKG,UAAU,SAAf,UACE,uBACEC,KAAK,SACLC,KAAK,cACLC,GAAG,cACHC,YAAY,oBACZC,SA3Be,SAACC,GACpB,IAAMC,EAASD,EAAME,OAA4BD,MAE3CE,EADO,IAAIC,IAAKrB,EAAYd,GACdoC,OAAOJ,GAAOK,MAAM,EAAG,IAC3ChB,EAAgBa,IAwBZI,QArBc,WAClBnB,GAAc,IAqBVoB,aAAa,MACbC,aAAW,SACXlB,IAAKA,IAGP,qBAAKG,UAAU,gBAAf,SACGP,GACC,oBAAIO,UAAU,aAAd,SACGL,EAAaqB,KAAI,SAACC,EAAGC,GAAJ,OAChB,cAAC,IAAD,CAAgCC,GAAE,gCAA2BF,EAAEG,KAAKlB,MAAQF,UAAU,mBAAtF,SACE,qBAAIqB,UAASJ,EAAEG,KAAKjB,GAAIH,UAAU,aAAlC,UACE,uBAAMA,UAAU,YAAhB,mBAAmCiB,EAAEG,KAAKlB,QAC1C,uBAAMF,UAAU,UAAhB,iBAA+BiB,EAAEG,KAAKjB,MACtC,uBAAMH,UAAU,cAAhB,qBAAuCiB,EAAEG,KAAKE,UAC9C,cAACjD,EAAD,CACEkD,IAAKN,EAAEG,KAAKI,MACZC,GAAI,2BACJC,UA9BAC,EA8BmBV,EAAEG,KAAKO,kBA7BnC,qBAAKC,IAAKD,EAAmB3B,UAAU,2BAA2B6B,IAAI,8BAqBpDZ,EAAEG,KAAKjB,GAAIe,IAtBrB,IAACS,a,+DCvBLG,G,OAxBU,WAAO,IAAD,EACOC,YAAS,GAAD,OAAIC,qBAAJ,+BADf,mBACtBC,EADsB,YACdC,EADc,EACdA,KAAMC,EADQ,EACRA,UAMrB,OACE,qBAAKnC,UAAU,SAAf,SACE,cAACoC,EAAA,EAAD,CACEC,MAAM,6BACNtB,aAAW,6BACXuB,WAAY,IACZC,WAAY,IACZC,OAAK,EALP,SAOE,cAACC,EAAA,EAAD,CAAQC,QAbI,WAChBP,EAAYD,IAASD,KAYWjC,UAAU,aAAa2C,QAAQ,YAAYC,MAAM,YAA7E,SACGT,EAAY,cAAC,IAAD,IAA4B,cAAC,IAAD,Y,wBCmBpCU,UA/Bc,WAC3B,IAAMC,EAAwC,MAA3BC,cAAcC,SAEjC,SAASC,IACP,OACE,cAACC,EAAA,EAAD,UACE,sBAAMC,EAAE,0CAKd,OACE,mCACE,eAACC,EAAA,EAAD,CAAQC,SAAS,SAASrD,UAAU,UAApC,UACE,sBAAKA,UAAU,aAAf,UACE,cAAC,EAAD,KAEE8C,GACA,cAAC,IAAD,CAAS3B,GAAG,IAAZ,SACE,cAACsB,EAAA,EAAD,CAAQE,QAAQ,YAAY3C,UAAU,SAAS4C,MAAM,YAArD,SACE,cAACK,EAAD,WAKR,cAAC,EAAD","file":"static/js/10.90655755.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nimport React, { lazy, useState, useRef } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { useSelector } from 'react-redux';\n\nimport Fuse from 'fuse.js';\nimport { useClickAway } from 'ahooks';\n\nimport { PokesTypes } from 'types/index';\n\nimport './styles/style.scss';\n\nconst ImageContainer = lazy(() => import('components/ImageContainer/ImageContainer'));\n\nlet fuseOptions = {\n  shouldSort: true,\n  tokenize: true,\n  matchAllTokens: false,\n  findAllMatches: false,\n  includeScore: true,\n  includeMatches: true,\n  threshold: 0.3,\n  location: 0,\n  distance: 10,\n  maxPatternLength: 20,\n  minMatchCharLength: 2,\n  keys: ['name', 'weight', 'id'],\n};\n\ninterface SearchTypes {\n  pokemonArr: PokesTypes[];\n}\n\nconst Search: React.FC = () => {\n  const pokemonArr = useSelector((state: SearchTypes) => state.pokemonArr);\n\n  const [showResult, setShowResult] = useState<boolean>(false);\n  const [searchResult, setSearchResult] = useState<any[]>([]);\n\n  const handleChange = (event: React.SyntheticEvent): void => {\n    const value = (event.target as HTMLInputElement).value;\n    const fuse = new Fuse(pokemonArr, fuseOptions);\n    const result = fuse.search(value).slice(0, 11);\n    setSearchResult(result);\n  };\n\n  const handleFocus = () => {\n    setShowResult(true);\n  };\n\n  const ref: any = useRef<HTMLSpanElement>();\n  useClickAway(() => {\n    setShowResult(false);\n  }, ref);\n\n  const fallback = (placeholderBase64: string) => {\n    return <img src={placeholderBase64} className=\"placeholderBase64 deBlur\" alt=\"placeholderBase64\" />;\n  };\n\n  return (\n    <div className=\"search\">\n      <input\n        type=\"search\"\n        name=\"searchInput\"\n        id=\"searchInput\"\n        placeholder=\"Pikachu, 25, 900g\"\n        onChange={handleChange}\n        onFocus={handleFocus}\n        autoComplete=\"off\"\n        aria-label=\"Search\"\n        ref={ref}\n      />\n\n      <div className=\"searchResults\">\n        {showResult && (\n          <ul className=\"searchList\">\n            {searchResult.map((i, key) => (\n              <NavLink key={(i.item.id, key)} to={`/detailedPage/pokemon/${i.item.name}`} className=\"searchItem_outer\">\n                <li data-id={i.item.id} className=\"searchItem\">\n                  <span className=\"item_name\">NAME: {i.item.name}</span>\n                  <span className=\"item_id\">ID: {i.item.id}</span>\n                  <span className=\"item_weight\">WEIGHT: {i.item.weight}</span>\n                  <ImageContainer\n                    url={i.item.image}\n                    cn={'searchItem__image deBlur'}\n                    fallback={fallback(i.item.placeholderBase64)}\n                  />\n                </li>\n              </NavLink>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport useSound from 'use-sound';\nimport { Button } from '@material-ui/core';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport './styles/style.scss';\n\nconst Player: React.FC = () => {\n  const [play, { stop, isPlaying }] = useSound(`${process.env.PUBLIC_URL}/sound/pokemon_opening.mp3`);\n\n  const playPause = () => {\n    isPlaying ? stop() : play();\n  };\n\n  return (\n    <div className=\"player\">\n      <Tooltip\n        title=\"Pokemon opening song (rus)\"\n        aria-label=\"Pokemon opening song (rus)\"\n        enterDelay={500}\n        leaveDelay={200}\n        arrow\n      >\n        <Button onClick={playPause} className=\"playButton\" variant=\"contained\" color=\"secondary\">\n          {isPlaying ? <PauseCircleFilledIcon /> : <PlayCircleFilledIcon />}\n        </Button>\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default Player;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { useLocation } from 'react-router-dom';\n\nimport Search from 'components/Search/Search';\nimport Player from 'components/Player/Player';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport { Button } from '@material-ui/core';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport './styles/style.scss';\n\nconst HeaderLine: React.FC = () => {\n  const isMainPage = useLocation().pathname === '/';\n\n  function HomeIcon() {\n    return (\n      <SvgIcon>\n        <path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\" />\n      </SvgIcon>\n    );\n  }\n\n  return (\n    <>\n      <AppBar position=\"static\" className=\"topLine\">\n        <div className=\"buttonsRow\">\n          <Player />\n\n          {!isMainPage && (\n            <NavLink to=\"/\">\n              <Button variant=\"contained\" className=\"toHome\" color=\"secondary\">\n                <HomeIcon />\n              </Button>\n            </NavLink>\n          )}\n        </div>\n        <Search />\n      </AppBar>\n    </>\n  );\n};\n\nexport default HeaderLine;\n"],"sourceRoot":""}